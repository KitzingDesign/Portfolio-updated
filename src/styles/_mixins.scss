@use "sass:map";
@use "sass:meta";
@use "variables" as *;

// Media query mixin
@mixin media-breakpoint-up($name) {
  $min: map.get($breakpoints, $name);
  @if meta.type-of($min) == "number" {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @error "Breakpoint #{$name} not found in $breakpoints map";
  }
}

@mixin media-breakpoint-down($name) {
  $max: map.get($breakpoints, $name);
  @if meta.type-of($max) == "number" {
    // Convert to ems for better accessibility
    $max-em: if(unit($max) == "px", $max / 16 * 1em, $max);
    @media (max-width: $max-em) {
      @content;
    }
  } @else {
    @error "Breakpoint #{$name} not found in $breakpoints map";
  }
}

@mixin media-breakpoint-between($lower, $upper) {
  $min: map.get($breakpoints, $lower);
  $max: map.get($breakpoints, $upper);

  @if meta.type-of($min) == "number" and meta.type-of($max) == "number" {
    $max-em: if(unit($max) == "px", $max / 16 * 1em, $max);
    @media (min-width: $min) and (max-width: $max-em) {
      @content;
    }
  } @else {
    @error "Breakpoints #{$lower} or #{$upper} not found";
  }
}

@mixin typography($size, $weight: regular, $line-height: 1.5) {
  font-size: var(--font-size-#{$size});
  font-weight: var(--font-weight-#{$weight});
  line-height: $line-height;
}

// Spacing mixin
@mixin spacing($property, $direction: null, $size) {
  @if $direction {
    #{$property}-#{$direction}: map.get($spacers, $size);
  } @else {
    #{$property}: map.get($spacers, $size);
  }
}

// Button mixin
@mixin button-variant($background, $color: white) {
  background-color: $background;
  color: $color;
  border: 1px solid darken($background, 5%);

  &:hover {
    background-color: darken($background, 10%);
    border-color: darken($background, 15%);
  }
}
