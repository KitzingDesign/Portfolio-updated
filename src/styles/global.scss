@use "sass:color";
@use "sass:map";
@use "./_variables" as *;
@use "mixins";
@use "base";

@forward "mixins";
@forward "variables";

:root {
  // CSS Custom Properties for runtime theming
  --color-primary: #{map.get($colors, primary)};
  --color-secondary: #{map.get($colors, secondary)};
  --color-tertiary: #{map.get($colors, tertiary)};
  --color-light: #{map.get($colors, light)};
  --color-dark: #{map.get($colors, dark)};
  --color-text: #{map.get($colors, text)};
  --color-gray: #{map.get($colors, gray)};
  --color-light-gray: #{map.get($colors, light-gray)};
  --color-success: #{map.get($colors, success)};
  --color-danger: #{map.get($colors, danger)};
  --color-warning: #{map.get($colors, warning)};
  --color-info: #{map.get($colors, info)};

  // Font sizes
  @each $size, $value in $font-sizes {
    --font-size-#{$size}: #{$value};
  }

  @each $weight, $value in $font-weights {
    --font-weight-#{$weight}: #{$value};
  }

  // Spacing
  @each $space, $value in $spacing {
    --space-#{$space}: #{$value};
  }

  // Border radius
  @each $name, $value in $border-radius {
    --border-radius-#{$name}: #{$value};
  }

  // breakpoint radius
  @each $name, $value in $breakpoints {
    --breakpoint-#{$name}: #{$value};
  }
}

body {
  background-color: var(--color-light);
  color: var(--color-text);
  transition: background-color 0.3s ease, color 0.3s ease;
}

// Dark mode
[data-theme="dark"] {
  --color-primary: #{color.adjust(map.get($colors, primary), $lightness: -10%)};
  --color-secondary: #{color.adjust(
      map.get($colors, secondary),
      $lightness: -10%
    )};
  --color-light: #{map.get($colors, dark)};
  --color-dark: #{map.get($colors, light)};
  --color-text: #{map.get($colors, light)};

  background-color: var(--color-dark);
  color: var(--color-light);

  a {
    color: lighten(map.get($colors, primary), 15%);

    &:hover {
      color: lighten(map.get($colors, primary), 25%);
    }
  }
}

// Utility classes
@each $size, $value in $font-sizes {
  .text-#{$size} {
    font-size: var(--font-size-#{$size});
  }
}

@each $weight, $value in $font-weights {
  .fw-#{$weight} {
    font-weight: var(--font-weight-#{$weight});
  }
}
